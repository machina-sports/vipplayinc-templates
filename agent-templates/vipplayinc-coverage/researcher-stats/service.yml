workflow:

  name: coverage-researcher-stats-service
  title: "Coverage - Researcher Stats Service"
  description: "Coverage Researcher Stats Service"
  context-variables:
    debugger:
      enabled: true
  inputs:
    event_code: "$.get('event_code') or None"
    custom_instruction: "$.get('custom_instruction', 'Generate engaging pre-match quizzes for viewer engagement before the match starts, focusing on trivia and fan knowledge')"
    custom_script_name: "$.get('custom_script_name', 'COVERAGE_RESEARCHER_STATS')"
    custom_topic_name: "$.get('custom_topic_name', 'PRE_MATCH_RESEARCHER')"
  outputs:
    workflow-status: "$.get('game-exists') is not True and 'skipped' or 'executed'"
  tasks:

    # load-game-by-code
    - type: document
      name: load-game-by-code
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["value.start_time", 1]
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "{'$in': ['soccer-game']}"
      outputs:
        game-exists: "len($.get('documents', [])) > 0 if $.get('documents') else False"
        game-metadata: "$.get('documents')[0].get('metadata', {}) if $.get('documents') else None"
        game-value: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        stats-control: "$.get('documents')[0].get('value', {}).get('stats-control', {}) if $.get('documents') else None"

    # load-game-by-schedule
    - type: document
      name: load-game-by-schedule
      condition: "$.get('game-exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["value.version_control.updated", 1]
      filters:
        value.start_time: "{'$gt': datetime.utcnow() - timedelta(hours=1), '$lt': datetime.utcnow() + timedelta(hours=48)}"
        value.stats-control.finished: "{'$ne': True}"
        value.stats-control.processing: "{'$ne': True}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.finished: "{'$ne': True}"
      inputs:
        name: "{'$in': ['soccer-game']}"
      outputs:
        game-exists: "len($.get('documents', [])) > 0 if $.get('documents') else False"
        game-metadata: "$.get('documents')[0].get('metadata', {}) if $.get('documents') else None"
        game-value: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        stats-control: "$.get('documents')[0].get('value', {}).get('stats-control', {}) if $.get('documents') else None"

    # mapping-soccer-game-summary
    - type: mapping
      name: mapping-soccer-game-summary
      condition: "$.get('game-exists') is True"
      inputs:
        game_metadata: "$.get('game-metadata', {})"
        game_selected: "$.get('game-value', {})"
      outputs:
        event_code: "$.get('event_code')"
        game-short-name: "$.get('game-short-name')"
        team_home_name: "$.get('team_home_name')"
        team_away_name: "$.get('team_away_name')"

    # soccer-game-version-control
    - type: document
      name: soccer-game-version-control
      condition: "$.get('game-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('game-value', {}),
            'stats-control': {
              **$.get('stats-control', {}),
              'processing': True
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # mapping-date-prefix
    - type: mapping
      name: coverage-mapping-date-prefix
      condition: "$.get('game-exists') is True"
      outputs:
        date_prefix: "$.get('date_prefix')"

    # mapping-researcher-stats-service
    - type: mapping
      name: coverage-mapping-researcher-stats-service
      condition: "$.get('game-exists') is True"
      inputs:
        date_prefix: "$.get('date_prefix')"
        game-short-name: "$.get('game-short-name')"
        script_name: "$.get('custom_script_name')"
        team_home_name: "$.get('team_home_name', '').upper().replace(' ', '_')"
        team_away_name: "$.get('team_away_name', '').upper().replace(' ', '_')"
      outputs:
        agenda-required: "$.get('agenda-required')"
        content-group: "$.get('content-group')"
        content-name: "$.get('content-name')"
        coverage-indexes: "$.get('coverage-indexes')"

    # researcher-stats-populate-scripts
    - type: document
      name: researcher-stats-populate-scripts
      condition: "$.get('game-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        content-script: |
          {
            "agenda-required": $.get('agenda-required'),
            "custom_instruction": $.get('custom_instruction'),
            "custom_script_name": $.get('custom_script_name'),
            "custom_topic_name": $.get('custom_topic_name'),
            "indexes": $.get('coverage-indexes'),
            "name": "content-script",
            "title": $.get('content-name'),
            "web-search-limit": 3
          }
      metadata:
        content-group: "$.get('content-group')"
        content-name: "$.get('content-name')"
        event_code: "$.get('event_code')"

    # event-version-control
    - type: document
      name: game-version-control
      description: "Update the events document version control."
      condition: "$.get('game-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('game-value', {}),
            'stats-control': {
              **$.get('stats-control', {}),
              'finished': True,
              'processing': False
            }
          }
      metadata:
        event_code: "$.get('event_code')"