workflow:

  name: coverage-reporter-image-executor
  title: "Coverage - Images Executor"
  description: "Workflow to execute images."
  context-variables:
    debugger:
      enabled: false
    machina-ai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  outputs:
    workflow-status: "$.get('workflow-status', 'skipped')"
  tasks:

    # load-next-article
    - type: document
      name: load-next-article
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["value.article-control.updated", 1]
      filters:
        value.article-control.processing: "{'$ne': True}"
        value.article-control.finished: "{'$ne': True}"
        value.images-control.status: "{'$ne': 'executed'}"
      inputs:
        name: "'content-article'"
      outputs:
        article-exists: "len($.get('documents', [])) > 0 if $.get('documents') else False"
        article-document: "$.get('documents', [{}])[0] if $.get('documents') else None"
        article-document-id: "$.get('documents', [{}])[0].get('_id', '') if $.get('documents') else ''"
        article-metadata: "$.get('documents', [{}])[0].get('metadata', {}) if $.get('documents') else None"
        article-value: "$.get('documents', [{}])[0].get('value', {}) if $.get('documents') else None"

    # document-article-control
    - type: document
      name: coverage-article-control-processing
      condition: "$.get('article-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      filters:
        document_id: "$.get('article-document-id')"
      documents:
        content-article: |
          {
            **$.get('article-value', {}),
            'article-control': {
              **$.get('article-control', {}),
              'processing': True,
              'updated': datetime.utcnow()
            }
          }

    # mapping article-control
    - type: mapping
      name: coverage-mapping-article-control
      condition: "$.get('article-exists') is True"
      inputs:
        _document: "$.get('article-value')"
        _metadata: "$.get('article-metadata')"
      outputs:
        article-control: "$.get('article-control')"
        article-control-finished: "$.get('article-control').get('finished', False)"
        article-counter: "$.get('article-counter')"
        content-group: "$.get('content-group')"
        content-id: "$.get('content-id')"
        content-name: "$.get('content-name')"
        content-topic: "$.get('content-topic')"
        event_code: "$.get('event_code')"
        team_code: "$.get('team_code')"
        script-instructions: "$.get('script-instructions')"

    # mapping images-control
    - type: mapping
      name: coverage-mapping-images-control
      condition: "$.get('article-exists') is True"
      inputs:
        _document: "$.get('article-value')"
        _metadata: "$.get('article-metadata')"
      outputs:
        article-exists: "True"
        article-required: "$.get('article-required')"
        images-control: "$.get('images-control')"
        images-control-status: "$.get('images-control-status')"
        websearch-request: "$.get('websearch-request')"
        websearch-request-status: "$.get('websearch-request-status')"

    # load-content-article
    - type: "document"
      name: "load-content-article"
      condition: |
        (
          $.get('article-exists') is True
        )
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", -1]
      filters:
        document_id: "$.get('content-id')"
      outputs:
        result-articles: "$.get('documents', []) if $.get('documents') else []"
        result-article-selected: "$.get('documents', [])[0] if $.get('documents') else None"

    # soccer-prompt-article-br-image-briefing
    - type: prompt
      name: "soccer-prompt-article-br-image-briefing"
      condition: |
        (
          $.get('article-exists') is True
          and $.get('websearch-request-status') == 'pending'
        )
      connector:
        name: "google-genai"
        command: "invoke_prompt"
        model: "gemini-2.5-pro"
      inputs:
        input_article_value: "str($.get('result-article-selected'))"
      outputs:
        image-briefing: "$"
  
    # content-version-control
    - type: document
      name: content-version-control
      condition: |
        (
          $.get('article-exists') is True
          and $.get('websearch-request-status') == 'pending'
        )
      config:
        action: "update"
        embed-vector: false
        force-update: true
      filters:
        document_id: "$.get('content-id')"
      documents:
        content-article: |
          {
            **$.get('result-article-selected', {}).get('value', {}),
            **$.get('image-briefing', {})
          }

    # mapping image-from-articles
    - type: mapping
      name: coverage-mapping-image-from-articles
      condition: |
        (
          $.get('article-exists') is True
          and $.get('websearch-request-status') == 'pending'
        )
      inputs:
        _article: |
          {
            **$.get('result-article-selected', {}).get('value', {}),
            **$.get('image-briefing', {})
          }
        _metadata: "$.get('article-metadata')"
      outputs:
        image-bulk: "$.get('image-bulk', [])"
        image-bulk-length: "len($.get('image-bulk', []))"

    # create new search request
    - type: "document"
      name: "create-search-request"
      condition: |
        (
          $.get('article-exists') is True
          and $.get('websearch-request-status') == 'pending'
          and $.get('image-bulk-length', 0) > 0
        )
      config:
        action: "bulk-save"
        embed-vector: false
        force-update: true
      document_name: "'web-image'"
      documents:
        items: "$.get('parsed-items', [])"
      inputs:
        parsed-items: "$.get('image-bulk')[:10]"
      outputs:
        websearch-request-status: "'executed'"
        workflow-status: "'executed'"

    # load-searches-and-scrapings
    - type: "document"
      name: "load-searches-and-scrapings"
      condition: |
        (
          $.(article-exists) is True
          and '$.(websearch-request-status)' == 'executed'
        )
      config:
        action: "search"
        search-limit: 100
        search-vector: false
        search-sorters: ["value.version_control.updated", 1]
      filters:
        metadata.content-group: "$.get('content-group', '')"
        metadata.content-name: "$.get('content-name', '')"
        metadata.content-topic: "$.get('content-topic', '')"
      inputs:
        name: "{'$in': ['web-search', 'web-scraping']}"
      outputs:
        web-research-items: "$.get('documents', [])"

    # mapping web-research-items
    - type: "mapping"
      name: "coverage-mapping-image-research-items"
      condition: |
        (
          $.(article-exists) is True
          and '$.(websearch-request-status)' == 'executed'
        )
      inputs:
        _documents: "$.get('web-research-items', [])"
      outputs:
        have-content-to-process: |
          (
            $.(article-exists) is True
            and len($.get('web-research-finished')) > 0
            and len($.get('web-research-pending')) == 0
          )
        web-research-items: "$.get('web-research-items', [])"
        web-research-finished: "len($.get('web-research-finished', []))"
        web-research-processing: "len($.get('web-research-processing', []))"
        web-research-pending: "len($.get('web-research-pending', []))"
        workflow-status: |
          (
            $.(article-exists) is True
            and len($.get('web-research-finished')) > 0
            and len($.get('web-research-pending')) == 0
          ) and 'executed' or $.get('workflow-status')
        websearch-request-status: |
          (
            $.(article-exists) is True
            and len($.get('web-research-finished')) > 0
            and len($.get('web-research-pending')) == 0
          ) and 'finished' or $.get('websearch-request-status')
        
    # document-article-control
    - type: document
      name: coverage-article-control-update
      condition: "$.get('article-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      filters:
        document_id: "$.get('article-document-id')"
      documents:
        content-article: |
          {
            **$.get('article-value', {}),
            'article-control': {
              **$.get('article-control', {}),
              'counter': $.get('article-counter', 0) + 1,
              'finished': $.get('article-control-finished', False),
              'processing': False,
              'updated': datetime.utcnow()
            },
            'images-control': {
              **$.get('images-control', {}),
              'status': $.get('images-control-status')
            },
            'websearch-request': {
              **$.get('websearch-request', {}),
              'pending': $.get('web-research-pending', []),
              'processing': $.get('web-research-processing', []),
              'finished': $.get('web-research-finished', []),
              'status': $.get('websearch-request-status')
            }
          }