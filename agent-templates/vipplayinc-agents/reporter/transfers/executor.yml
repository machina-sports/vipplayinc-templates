workflow:

  name: coverage-reporter-transfers
  title: "Coverage - Reporter Transfers"
  description: "Workflow to execute Reporter Transfers."
  context-variables:
    debugger:
      enabled: false
    google-genai:
      api_key: "$TEMP_CONTEXT_VARIABLE_GOOGLE_GENERATIVE_AI_API_KEY"
    machina-ai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
    sportradar-soccer:
      sportradar_api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
  inputs:
    content-group: "$.get('content-group', 'SPORTS_SOCCER_GAME')"
    topic: "$.get('topic', 'transfers')"
  outputs:
    workflow-status: "$.get('workflow-status', 'skipped')"
  tasks:

    # docs: load-next-transfer
    - type: document
      name: load-next-transfer
      connector:
        name: machina-ai
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["value.version-control.updated", 1]
      filters:
        value.version-control.finished: "{'$ne': True}"
        value.version-control.processing: "{'$ne': True}"
      inputs:
        name: "'content-transfer'"
      outputs:
        transfer-exists: "len($.get('documents', [])) > 0 if $.get('documents') else False"
        transfer-document: "$.get('documents', [{}])[0] if $.get('documents') else None"
        transfer-document-id: "$.get('documents', [{}])[0].get('_id', '') if $.get('documents') else ''"
        transfer-metadata: "$.get('documents', [{}])[0].get('metadata', {}) if $.get('documents') else None"
        transfer-value: "$.get('documents', [{}])[0].get('value', {}) if $.get('documents') else None"
        event_code: "$.get('documents', [{}])[0].get('metadata', {}).get('event_code', '') if $.get('documents') else ''"
        team_code: "$.get('documents', [{}])[0].get('metadata', {}).get('team_code', '') if $.get('documents') else ''"

    # docs: transfer-version-control-processing
    - type: document
      name: transfer-version-control-processing
      condition: "$.get('transfer-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      filters:
        document_id: "$.get('transfer-document-id')"
      documents:
        content-transfer: |
          {
            **$.get('transfer-value', {}),
            'version-control': {
              **$.get('transfer-value', {}).get('version-control', {}),
              'processing': True,
              'updated': datetime.utcnow()
            }
          }

    ## GET OTHER TRANSFERS

    # load-other-transfers
    - type: document
      name: load-other-transfers
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 10
        search-vector: false
        search-sorters: ["updated", -1]
      filters:
        metadata.event_code: "$.get('event_code')"
        metadata.team_code: "$.get('team_code')"
      inputs:
        name: "{'$in': ['content-transfer']}"
      outputs:
        other-transfers: "$.get('documents', [{}])[0].get('value', {}) if $.get('documents') else None"
        other-transfers-bulk: |
          [
            {
              **d.get('value', {}),
              '_id': d.get('_id')
            }
            for d in $.get('documents', [])
          ]
    
    ## GET LAST EVENT CONTEXT

    # load-event-context
    - type: document
      name: load-event-context
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 10
        search-vector: false
        search-sorters: ["updated", -1]
      filters:
        metadata.event_code: "$.get('event_code')"
        metadata.content_type: "'last-match-analysis'"
        metadata.competitor_id: "$.get('team_code')"
      inputs:
        name: "{'$in': ['content-snippet']}"
      outputs:
        last-event-context: "$.get('documents', [{}])[0].get('value', {}) if $.get('documents') else None"
        last-event-context-bulk: |
          [
            {
              **d.get('value', {}),
              '_id': d.get('_id')
            }
            for d in $.get('documents', [])
          ]
    
    ## GET NEXT EVENT CONTEXT

    # load-event-by-code
    - type: document
      name: load-event-by-code
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["value.start_time", 1]
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "{'$in': ['soccer-game']}"
      outputs:
        game-exists: "len($.get('documents', [])) > 0 if $.get('documents') else False"
        game-metadata: "$.get('documents')[0].get('metadata', {}) if $.get('documents') else None"
        game-value: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"

    # coverage-mapping-sportradar-soccer
    - type: mapping
      name: coverage-mapping-sportradar-soccer
      description: "Transform the sportradar soccer data"
      condition: "$.get('game-exists') is True"
      inputs:
        event_selected: "$.get('game-value')"
      outputs:
        next_event_code: "$.get('event_code')"
        next_event_date: "$.get('event_date')"
        next_event_day_of_week: "$.get('event_day_of_week')"
        next_event_name: "$.get('title')"
        next_event_slug: "$.get('slug')"
        next_event_venue: "$.get('venue_title')"
        workflow-status: "'executed'"

    ## CONTENT GENERATION

    # prompt: coverage-reporter-transfers-heading-prompt
    - type: "prompt"
      name: "coverage-reporter-transfers-heading-prompt"
      description: "Generate a preview for the upcoming game"
      condition: "$.get('transfer-exists') is True"
      connector:
        name: "google-genai"
        command: "invoke_prompt"
        model: "gemini-2.5-pro"
      inputs:
        _transfer-document: "str($.get('transfer-value'))"
        _transfer_next_event_name: "$.get('next_event_name')"
        _transfer_next_event_date: "$.get('next_event_date')"
      outputs:
        reporter-article-br-heading: "$.get('title')"  
        reporter-article-br-subtitle: "$.get('subtitle')"
        reporter-article-br-event-name: "$.get('event_name')"
        reporter-article-br-event-date-time: "$.get('event_date_time')"
        reporter-article-br-event-venue: "$.get('event_venue')"
        reporter-article-br-slug: "$.get('slug')"

    # prompt: coverage-reporter-transfers-team-transfers-prompt
    - type: "prompt"
      name: "coverage-reporter-transfers-team-transfers-prompt"
      description: "Generate a preview for the team transfers"
      condition: "$.get('transfer-exists') is True"
      connector:
        name: "google-genai"
        command: "invoke_prompt"
        model: "gemini-2.5-pro"
      inputs:
        _transfer-team-name: "$.get('transfer-value', {}).get('team', {})"
        _transfer_type: "$.get('transfer-value', {}).get('transfer_type', {})"
        _transfer_other_transfers: "$.get('other-transfers-bulk', [])"
      outputs:
        reporter-article-br-team-transfers-title: "$.get('section_title')"
        reporter-article-br-team-transfers-content: "$.get('section_content')"

    # prompt: coverage-reporter-transfers-last-event-prompt
    - type: "prompt"
      name: "coverage-reporter-transfers-last-event-prompt"
      description: "Generate a preview for the last game"
      condition: "$.get('transfer-exists') is True"
      connector:
        name: "google-genai"
        command: "invoke_prompt"
        model: "gemini-2.5-pro"
      inputs:
        _transfer-team-name: "$.get('transfer-value', {}).get('team', {})"
        _transfer_type: "$.get('transfer-value', {}).get('transfer_type', {})"
        _transfer_last_event_documents: "$.get('last-event-context-bulk', [])"
      outputs:
        reporter-article-br-last-event-title: "$.get('section_title')"
        reporter-article-br-last-event-content: "$.get('section_content')"

    # prompt: coverage-reporter-transfers-next-event-prompt
    - type: "prompt"
      name: "coverage-reporter-transfers-next-event-prompt"
      description: "Generate a preview for the upcoming game"
      condition: "$.get('transfer-exists') is True"
      connector:
        name: "google-genai"
        command: "invoke_prompt"
        model: "gemini-2.5-pro"
      inputs:
        _transfer_next_event_name: "$.get('next_event_name')"
        _transfer_next_event_date: "$.get('next_event_date')"
        _transfer_next_event_day_of_week: "$.get('next_event_day_of_week')"
        _transfer_next_event_venue: "$.get('next_event_venue')"
      outputs:
        reporter-article-br-next-event-title: "$.get('section_title')"
        reporter-article-br-next-event-content: "$.get('section_content')"

    ## SAVE UPDATE ARTICLE

    # update-article-br
    - type: "document"
      name: "update-article-br"
      description: "Update the document."
      condition: "$.get('transfer-exists') is True"
      config:
        action: "update"
        embed-vector: true
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      documents:
        content-article: |
          {
            'section_1_title': $.get('reporter-article-br-team-transfers-title'),
            'section_1_content': $.get('reporter-article-br-team-transfers-content'),
            'section_2_title': $.get('reporter-article-br-last-event-title'),
            'section_2_content': $.get('reporter-article-br-last-event-content'),
            'section_3_title': $.get('reporter-article-br-next-event-title'),
            'section_3_content': $.get('reporter-article-br-next-event-content'),
            'execution': datetime.utcnow(),
            'event-details': {
              'match': $.get('reporter-article-br-event-name'),
              'when': $.get('reporter-article-br-event-date-time'),
              'venue': $.get('reporter-article-br-event-venue')
            },
            'slug': f"{$.get('reporter-article-br-slug')}-br",
            'title': $.get('reporter-article-br-heading'),
            'subtitle': $.get('reporter-article-br-subtitle'),
            'status': 'active'
          }
      metadata:
        content-group: "$.get('transfer-metadata', {}).get('content-group')"
        content-name: "$.get('transfer-metadata', {}).get('content-name')"
        content-topic: "$.get('transfer-metadata', {}).get('content-topic')"
        document_type: "'content-article'"
        competition: "$.get('transfer-metadata', {}).get('competition_id')"
        event_code: "$.get('transfer-metadata', {}).get('event_code')"
        event_type: "$.get('transfer-metadata', {}).get('event_type')"
        transfer-document-id: "$.get('transfer-document-id')"
        language: "'br'"

    # VERSION CONTROL

    # docs: transfer-version-control-update
    - type: document
      name: transfer-version-control-update
      condition: "$.get('transfer-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      filters:
        document_id: "$.get('transfer-document-id')"
      documents:
        content-transfer: |
          {
            **$.get('transfer-value', {}),
            'version-control': {
              **$.get('transfer-value', {}).get('version-control', {}),
              'counter': $.get('transfer-value', {}).get('version-control', {}).get('counter', 0) + 1,
              'finished': True,
              'processing': False,
              'updated': datetime.utcnow()
            }
          }